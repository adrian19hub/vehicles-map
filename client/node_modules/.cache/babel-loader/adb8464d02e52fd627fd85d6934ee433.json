{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\Programming\\\\Projects\\\\Live-Vehicle-Map\\\\client\\\\src\\\\features\\\\Map\\\\GoogleMapWithoutPolygon.jsx\";\nimport React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GoogleMapWithoutPolygon = _ref => {\n  let {\n    mapConfig,\n    locationMarkers,\n    setZoom,\n    setBounds,\n    mapRef\n  } = _ref;\n  console.log('RENDER - google map WITHOUT polygons');\n  return /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.REACT_APP_API_KEY\n    },\n    defaultCenter: mapConfig.center,\n    defaultZoom: mapConfig.zoom,\n    yesIWantToUseGoogleMapApiInternals: true,\n    onGoogleApiLoaded: _ref2 => {\n      let {\n        map\n      } = _ref2;\n      mapRef.current = map;\n    },\n    onChange: _ref3 => {\n      let {\n        zoom,\n        bounds\n      } = _ref3;\n      setZoom(zoom);\n      setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n    },\n    children: clusters.map(cluster => {\n      const [longitude, latitude] = cluster.geometry.coordinates;\n      const {\n        cluster: isCluster,\n        point_count: pointCount\n      } = cluster.properties;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n\n_c = GoogleMapWithoutPolygon;\nexport default GoogleMapWithoutPolygon;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMapWithoutPolygon\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/GoogleMapWithoutPolygon.jsx"],"names":["React","GoogleMapReact","GoogleMapWithoutPolygon","mapConfig","locationMarkers","setZoom","setBounds","mapRef","console","log","key","process","env","REACT_APP_API_KEY","center","zoom","map","current","bounds","nw","lng","se","lat","clusters","cluster","longitude","latitude","geometry","coordinates","isCluster","point_count","pointCount","properties"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,uBAAuB,GAAG,QAAgE;AAAA,MAA/D;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,eAAb;AAA8BC,IAAAA,OAA9B;AAAuCC,IAAAA,SAAvC;AAAkDC,IAAAA;AAAlD,GAA+D;AAC5FC,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AAEA,sBACE,QAAC,cAAD;AACE,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAnB,KADpB;AAEE,IAAA,aAAa,EAAEV,SAAS,CAACW,MAF3B;AAGE,IAAA,WAAW,EAAEX,SAAS,CAACY,IAHzB;AAIE,IAAA,kCAAkC,MAJpC;AAKE,IAAA,iBAAiB,EAAE,SAAa;AAAA,UAAZ;AAAEC,QAAAA;AAAF,OAAY;AAAET,MAAAA,MAAM,CAACU,OAAP,GAAiBD,GAAjB;AAAuB,KAL3D;AAME,IAAA,QAAQ,EAAE,SAAsB;AAAA,UAArB;AAAED,QAAAA,IAAF;AAAQG,QAAAA;AAAR,OAAqB;AAC9Bb,MAAAA,OAAO,CAACU,IAAD,CAAP;AACAT,MAAAA,SAAS,CAAC,CACRY,MAAM,CAACC,EAAP,CAAUC,GADF,EAERF,MAAM,CAACG,EAAP,CAAUC,GAFF,EAGRJ,MAAM,CAACG,EAAP,CAAUD,GAHF,EAIRF,MAAM,CAACC,EAAP,CAAUG,GAJF,CAAD,CAAT;AAMD,KAdH;AAAA,cAiBGC,QAAQ,CAACP,GAAT,CAAcQ,OAAD,IAAa;AACvB,YAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBF,OAAO,CAACG,QAAR,CAAiBC,WAA/C;AACA,YAAM;AAAEJ,QAAAA,OAAO,EAAEK,SAAX;AAAsBC,QAAAA,WAAW,EAAEC;AAAnC,UAAkDP,OAAO,CAACQ,UAAhE;AACH,KAHA;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAwBH,CA3BD;;KAAM9B,uB;AA6BN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst GoogleMapWithoutPolygon = ({ mapConfig, locationMarkers, setZoom, setBounds, mapRef }) => {\r\n    console.log('RENDER - google map WITHOUT polygons');\r\n\r\n    return (\r\n      <GoogleMapReact \r\n        bootstrapURLKeys={{ key: process.env.REACT_APP_API_KEY }}\r\n        defaultCenter={mapConfig.center}\r\n        defaultZoom={mapConfig.zoom}\r\n        yesIWantToUseGoogleMapApiInternals\r\n        onGoogleApiLoaded={({ map }) => { mapRef.current = map; }}\r\n        onChange={({ zoom, bounds }) => {\r\n          setZoom(zoom);\r\n          setBounds([\r\n            bounds.nw.lng,\r\n            bounds.se.lat,\r\n            bounds.se.lng,\r\n            bounds.nw.lat,\r\n          ]);\r\n        }}\r\n      >\r\n        {/* {locationMarkers} */}\r\n        {clusters.map((cluster) => {\r\n            const [longitude, latitude] = cluster.geometry.coordinates;\r\n            const { cluster: isCluster, point_count: pointCount } = cluster.properties;\r\n        })}\r\n      </GoogleMapReact>\r\n      );\r\n};\r\n\r\nexport default GoogleMapWithoutPolygon;\r\n"]},"metadata":{},"sourceType":"module"}