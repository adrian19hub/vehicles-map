{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\Programming\\\\Projects\\\\Live-Vehicle-Map\\\\client\\\\src\\\\features\\\\Map\\\\GoogleMap.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-plusplus */\nimport GoogleMapReact from 'google-map-react';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getLocationMarkers } from './mapUtils';\nimport { defualtPolygonCoordinates } from './polygonAPI';\nimport { fetchVehicleIds } from '../../state/actions/mapActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapConfig = {\n  center: {\n    lat: 51.509865,\n    lng: -0.118092\n  },\n  zoom: 11\n};\n\nconst GoogleMap = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    vehiclesLocations,\n    selectingArea\n  } = useSelector(state => state.map);\n  const locationMarkers = getLocationMarkers(vehiclesLocations);\n  console.log('RENDER - google map', selectingArea);\n\n  const handlePolygonMouseUp = polygon => {\n    const vertices = polygon.getPath();\n    const coordinates = [];\n\n    for (let i = 0; i < vertices.getLength(); i++) {\n      const xy = vertices.getAt(i);\n      coordinates.push([xy.lat(), xy.lng()]);\n    }\n\n    dispatch(fetchVehicleIds(coordinates));\n  };\n\n  const handleApiLoaded = (map, maps) => {\n    const polygon = new maps.Polygon({\n      paths: defualtPolygonCoordinates,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n      editable: true,\n      draggable: true,\n      geodesic: true,\n      visible: selectingArea\n    });\n    polygon.setMap(map);\n    polygon.addListener('mouseup', () => handlePolygonMouseUp(polygon));\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.REACT_APP_API_KEY\n    },\n    defaultCenter: mapConfig.center,\n    defaultZoom: mapConfig.zoom,\n    yesIWantToUseGoogleMapApiInternals: true,\n    onGoogleApiLoaded: _ref => {\n      let {\n        map,\n        maps\n      } = _ref;\n      return handleApiLoaded(map, maps);\n    },\n    children: locationMarkers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GoogleMap, \"nK22b4Ew7Bw6Sl6MaNSH3g254CM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GoogleMap;\nexport default GoogleMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/GoogleMap.jsx"],"names":["GoogleMapReact","React","useEffect","useState","useSelector","useDispatch","getLocationMarkers","defualtPolygonCoordinates","fetchVehicleIds","mapConfig","center","lat","lng","zoom","GoogleMap","dispatch","vehiclesLocations","selectingArea","state","map","locationMarkers","console","log","handlePolygonMouseUp","polygon","vertices","getPath","coordinates","i","getLength","xy","getAt","push","handleApiLoaded","maps","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","editable","draggable","geodesic","visible","setMap","addListener","key","process","env","REACT_APP_API_KEY"],"mappings":"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","sourcesContent":["/* eslint-disable no-plusplus */\r\nimport GoogleMapReact from 'google-map-react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getLocationMarkers } from './mapUtils';\r\nimport { defualtPolygonCoordinates } from './polygonAPI';\r\nimport { fetchVehicleIds } from '../../state/actions/mapActions';\r\n\r\nconst mapConfig = {\r\n    center: {\r\n        lat: 51.509865,\r\n        lng: -0.118092,\r\n    },\r\n    zoom: 11,\r\n};\r\n\r\nconst GoogleMap = () => {\r\n    const dispatch = useDispatch();\r\n    const { vehiclesLocations, selectingArea } = useSelector((state) => state.map);\r\n    const locationMarkers = getLocationMarkers(vehiclesLocations);\r\n    console.log('RENDER - google map', selectingArea);\r\n\r\n    const handlePolygonMouseUp = (polygon) => {\r\n        const vertices = polygon.getPath();\r\n        const coordinates = [];\r\n        for (let i = 0; i < vertices.getLength(); i++) {\r\n          const xy = vertices.getAt(i);\r\n          coordinates.push([xy.lat(), xy.lng()]);\r\n        }\r\n        dispatch(fetchVehicleIds(coordinates));\r\n      };\r\n      \r\n      const handleApiLoaded = (map, maps) => {\r\n        const polygon = new maps.Polygon({\r\n          paths: defualtPolygonCoordinates,\r\n          strokeColor: '#FF0000',\r\n          strokeOpacity: 0.8,\r\n          strokeWeight: 2,\r\n          fillColor: '#FF0000',\r\n          fillOpacity: 0.35,\r\n          editable: true,\r\n          draggable: true,\r\n          geodesic: true,\r\n          visible: selectingArea,\r\n        });\r\n\r\n        polygon.setMap(map);\r\n        polygon.addListener('mouseup', () => handlePolygonMouseUp(polygon));\r\n      };\r\n\r\n    return (\r\n      <GoogleMapReact \r\n        bootstrapURLKeys={{ key: process.env.REACT_APP_API_KEY }}\r\n        defaultCenter={mapConfig.center}\r\n        defaultZoom={mapConfig.zoom}\r\n        yesIWantToUseGoogleMapApiInternals \r\n        onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\r\n      >\r\n        {locationMarkers}\r\n      </GoogleMapReact>\r\n    );\r\n};\r\n\r\nexport default GoogleMap;\r\n"]},"metadata":{},"sourceType":"module"}