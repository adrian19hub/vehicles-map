{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\Programming\\\\Projects\\\\Live-Vehicle-Map\\\\client\\\\src\\\\features\\\\Map\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-array-index-key */\n\n/* eslint-disable padded-blocks */\n\n/* eslint-disable react/self-closing-comp */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/react-in-jsx-scope */\nimport GoogleMapReact from 'google-map-react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchVehiclesLocations } from '../../state/actions/vehicleActions';\nimport Loader from '../Loader';\nimport handleApiLoaded from './polygon';\nimport { getLocationMarkers } from './mapUtils';\nimport usePolygon from './usePolygon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    center,\n    zoom\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    loading,\n    vehiclesLocations\n  } = useSelector(state => state.vehicles);\n  const [coordinates, setCoordinates] = usePolygon();\n  useEffect(() => dispatch(fetchVehiclesLocations()), []);\n  const locationMarkers = getLocationMarkers(vehiclesLocations);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_API_KEY\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref2 => {\n        let {\n          map,\n          maps\n        } = _ref2;\n        return handleApiLoaded(map, maps, polygonCoordinates);\n      },\n      children: locationMarkers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Map, \"I+sAmM38rqsngDUt2y+qYUFXwWk=\", false, function () {\n  return [useDispatch, useSelector, usePolygon];\n});\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 51.509865,\n    lng: -0.118092\n  },\n  zoom: 11\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/Map.jsx"],"names":["GoogleMapReact","useEffect","useState","useDispatch","useSelector","fetchVehiclesLocations","Loader","handleApiLoaded","getLocationMarkers","usePolygon","Map","center","zoom","dispatch","loading","vehiclesLocations","state","vehicles","coordinates","setCoordinates","locationMarkers","key","process","env","REACT_APP_API_KEY","map","maps","polygonCoordinates","defaultProps","lat","lng"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;;AACA;AACA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,GAAG,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAqB;AAC9B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM;AAAEW,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAiCX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAlD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,UAAU,EAAhD;AACAR,EAAAA,SAAS,CAAC,MAAMY,QAAQ,CAACR,sBAAsB,EAAvB,CAAf,EAA2C,EAA3C,CAAT;AAEA,QAAMe,eAAe,GAAGZ,kBAAkB,CAACO,iBAAD,CAA1C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGD,OAAO,gBACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ,QAAC,cAAD;AACE,MAAA,gBAAgB,EAAE;AAAEO,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAnB,OADpB;AAEE,MAAA,aAAa,EAAEb,MAFjB;AAGE,MAAA,WAAW,EAAEC,IAHf;AAIE,MAAA,kCAAkC,MAJpC;AAKE,MAAA,iBAAiB,EAAE;AAAA,YAAC;AAAEa,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD;AAAA,eAAmBnB,eAAe,CAACkB,GAAD,EAAMC,IAAN,EAAYC,kBAAZ,CAAlC;AAAA,OALrB;AAAA,gBAOGP;AAPH;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CA1BD;;GAAMV,G;UACeP,W,EAEsBC,W,EACDK,U;;;KAJpCC,G;AA4BNA,GAAG,CAACkB,YAAJ,GAAmB;AACfjB,EAAAA,MAAM,EAAE;AACJkB,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,GAAG,EAAE,CAAC;AAFF,GADO;AAKflB,EAAAA,IAAI,EAAE;AALS,CAAnB;AAQA,eAAeF,GAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable react/self-closing-comp */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchVehiclesLocations } from '../../state/actions/vehicleActions';\r\nimport Loader from '../Loader';\r\nimport handleApiLoaded from './polygon';\r\nimport { getLocationMarkers } from './mapUtils';\r\nimport usePolygon from './usePolygon';\r\n\r\nconst Map = ({ center, zoom }) => {\r\n    const dispatch = useDispatch();\r\n  \r\n    const { loading, vehiclesLocations } = useSelector((state) => state.vehicles);\r\n    const [coordinates, setCoordinates] = usePolygon();\r\n    useEffect(() => dispatch(fetchVehiclesLocations()), []);\r\n\r\n    const locationMarkers = getLocationMarkers(vehiclesLocations);\r\n\r\n    return (\r\n      <div className=\"map\">\r\n        {loading \r\n          ? <Loader />\r\n          : (\r\n            <GoogleMapReact \r\n              bootstrapURLKeys={{ key: process.env.REACT_APP_API_KEY }}\r\n              defaultCenter={center}\r\n              defaultZoom={zoom}\r\n              yesIWantToUseGoogleMapApiInternals \r\n              onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps, polygonCoordinates)}\r\n            >\r\n              {locationMarkers}\r\n            </GoogleMapReact>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 51.509865,\r\n        lng: -0.118092,\r\n    },\r\n    zoom: 11,\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}