{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport LocationMarker from './LocationMarker';\n\nconst generateLocationMarkers = vehiclesLocations => {\n  // return vehiclesLocations.map((vehicle, index) => {\n  //     if (index < 20) {\n  //         return <LocationMarker key={index} lat={vehicle.lat} lng={vehicle.lng} />;\n  //     } return null;\n  // });\n  return vehiclesLocations.map((vehicle, index) => ({\n    type: 'Feature',\n    properties: {\n      cluster: false,\n      vehicleId: index\n    },\n    geometry: {\n      type: 'Point',\n      coordinates: [vehicle.lng, vehicle.lat]\n    }\n  }));\n};\n\nexport { generateLocationMarkers };","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/mapUtils.js"],"names":["React","LocationMarker","generateLocationMarkers","vehiclesLocations","map","vehicle","index","type","properties","cluster","vehicleId","geometry","coordinates","lng","lat"],"mappings":"AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,uBAAuB,GAAIC,iBAAD,IAAuB;AACnD;AACA;AACA;AACA;AACA;AAEA,SAAOA,iBAAiB,CAACC,GAAlB,CAAsB,CAACC,OAAD,EAAUC,KAAV,MAAqB;AAC9CC,IAAAA,IAAI,EAAE,SADwC;AAE9CC,IAAAA,UAAU,EAAE;AACRC,MAAAA,OAAO,EAAE,KADD;AAERC,MAAAA,SAAS,EAAEJ;AAFH,KAFkC;AAM9CK,IAAAA,QAAQ,EAAE;AAAEJ,MAAAA,IAAI,EAAE,OAAR;AAAiBK,MAAAA,WAAW,EAAE,CAACP,OAAO,CAACQ,GAAT,EAAcR,OAAO,CAACS,GAAtB;AAA9B;AANoC,GAArB,CAAtB,CAAP;AAQH,CAfD;;AAiBA,SAASZ,uBAAT","sourcesContent":["/* eslint-disable import/prefer-default-export */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport LocationMarker from './LocationMarker';\r\n\r\nconst generateLocationMarkers = (vehiclesLocations) => {\r\n    // return vehiclesLocations.map((vehicle, index) => {\r\n    //     if (index < 20) {\r\n    //         return <LocationMarker key={index} lat={vehicle.lat} lng={vehicle.lng} />;\r\n    //     } return null;\r\n    // });\r\n\r\n    return vehiclesLocations.map((vehicle, index) => ({\r\n        type: 'Feature',\r\n        properties: {\r\n            cluster: false,\r\n            vehicleId: index,\r\n        },\r\n        geometry: { type: 'Point', coordinates: [vehicle.lng, vehicle.lat] },\r\n    }));\r\n};\r\n\r\nexport { generateLocationMarkers };\r\n"]},"metadata":{},"sourceType":"module"}