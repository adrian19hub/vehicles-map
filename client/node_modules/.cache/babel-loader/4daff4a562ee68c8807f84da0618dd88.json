{"ast":null,"code":"/* eslint-disable no-plusplus */\nlet infoWindow;\n\nfunction showArrays(event, map) {\n  // Since this polygon has only one path, we can call getPath() to return the\n  // MVCArray of LatLngs.\n  const polygon = this;\n  const vertices = polygon.getPath();\n  const contentString = `${'<b>Bermuda Triangle polygon</b><br>'}<br>`; // Iterate over the vertices.\n\n  for (let i = 0; i < vertices.getLength(); i++) {\n    const xy = vertices.getAt(i);\n    console.log(`Coordinate ${i}:${xy.lat()},${xy.lng()}`);\n  } // Replace the info window's content and position.\n\n\n  infoWindow.setContent(contentString);\n  infoWindow.setPosition(event.latLng);\n  infoWindow.open(map);\n}\n\nconst handleApiLoaded = (map, maps, polygonCoordinates) => {\n  const bermudaTriangle = new maps.Polygon({\n    paths: polygonCoordinates,\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    editable: true,\n    draggable: true,\n    geodesic: true\n  });\n  bermudaTriangle.setMap(map); // Add a listener for the click event.\n\n  bermudaTriangle.addListener('click', event => showArrays(event, map, maps));\n  bermudaTriangle.addListener('change', event => console.log(event));\n  infoWindow = new maps.InfoWindow();\n};\n\nmodule.exports = handleApiLoaded; // lat: 51.509865,\n// lng: -0.118092,","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/polygon.js"],"names":["infoWindow","showArrays","event","map","polygon","vertices","getPath","contentString","i","getLength","xy","getAt","console","log","lat","lng","setContent","setPosition","latLng","open","handleApiLoaded","maps","polygonCoordinates","bermudaTriangle","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","editable","draggable","geodesic","setMap","addListener","InfoWindow","module","exports"],"mappings":"AAAA;AACA,IAAIA,UAAJ;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAC9B;AACA;AACA,QAAMC,OAAO,GAAG,IAAhB;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACE,OAAR,EAAjB;AACA,QAAMC,aAAa,GAAI,GAAE,qCAAsC,MAA/D,CAL8B,CAO9B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,SAAT,EAApB,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAME,EAAE,GAAGL,QAAQ,CAACM,KAAT,CAAeH,CAAf,CAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAaL,CAAE,IAAGE,EAAE,CAACI,GAAH,EAAS,IAAGJ,EAAE,CAACK,GAAH,EAAS,EAApD;AACD,GAX6B,CAa9B;;;AACAf,EAAAA,UAAU,CAACgB,UAAX,CAAsBT,aAAtB;AACAP,EAAAA,UAAU,CAACiB,WAAX,CAAuBf,KAAK,CAACgB,MAA7B;AACAlB,EAAAA,UAAU,CAACmB,IAAX,CAAgBhB,GAAhB;AACD;;AAED,MAAMiB,eAAe,GAAG,CAACjB,GAAD,EAAMkB,IAAN,EAAYC,kBAAZ,KAAmC;AACtD,QAAMC,eAAe,GAAG,IAAIF,IAAI,CAACG,OAAT,CAAiB;AACxCC,IAAAA,KAAK,EAAEH,kBADiC;AAExCI,IAAAA,WAAW,EAAE,SAF2B;AAGxCC,IAAAA,aAAa,EAAE,GAHyB;AAIxCC,IAAAA,YAAY,EAAE,CAJ0B;AAKxCC,IAAAA,SAAS,EAAE,SAL6B;AAMxCC,IAAAA,WAAW,EAAE,IAN2B;AAOxCC,IAAAA,QAAQ,EAAE,IAP8B;AAQxCC,IAAAA,SAAS,EAAE,IAR6B;AASxCC,IAAAA,QAAQ,EAAE;AAT8B,GAAjB,CAAxB;AAWDV,EAAAA,eAAe,CAACW,MAAhB,CAAuB/B,GAAvB,EAZuD,CAavD;;AACAoB,EAAAA,eAAe,CAACY,WAAhB,CAA4B,OAA5B,EAAsCjC,KAAD,IAAWD,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAakB,IAAb,CAA1D;AACAE,EAAAA,eAAe,CAACY,WAAhB,CAA4B,QAA5B,EAAuCjC,KAAD,IAAWU,OAAO,CAACC,GAAR,CAAYX,KAAZ,CAAjD;AACAF,EAAAA,UAAU,GAAG,IAAIqB,IAAI,CAACe,UAAT,EAAb;AACD,CAjBH;;AAmBAC,MAAM,CAACC,OAAP,GAAiBlB,eAAjB,C,CAEA;AACA","sourcesContent":["/* eslint-disable no-plusplus */\r\nlet infoWindow;\r\n\r\nfunction showArrays(event, map) {\r\n  // Since this polygon has only one path, we can call getPath() to return the\r\n  // MVCArray of LatLngs.\r\n  const polygon = this;\r\n  const vertices = polygon.getPath();\r\n  const contentString = `${'<b>Bermuda Triangle polygon</b><br>'}<br>`;\r\n\r\n  // Iterate over the vertices.\r\n  for (let i = 0; i < vertices.getLength(); i++) {\r\n    const xy = vertices.getAt(i);\r\n    console.log(`Coordinate ${i}:${xy.lat()},${xy.lng()}`);\r\n  }\r\n\r\n  // Replace the info window's content and position.\r\n  infoWindow.setContent(contentString);\r\n  infoWindow.setPosition(event.latLng);\r\n  infoWindow.open(map);\r\n}\r\n\r\nconst handleApiLoaded = (map, maps, polygonCoordinates) => {\r\n     const bermudaTriangle = new maps.Polygon({\r\n      paths: polygonCoordinates,\r\n      strokeColor: '#FF0000',\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 2,\r\n      fillColor: '#FF0000',\r\n      fillOpacity: 0.35,\r\n      editable: true,\r\n      draggable: true,\r\n      geodesic: true,\r\n    });\r\n    bermudaTriangle.setMap(map);\r\n    // Add a listener for the click event.\r\n    bermudaTriangle.addListener('click', (event) => showArrays(event, map, maps));\r\n    bermudaTriangle.addListener('change', (event) => console.log(event));\r\n    infoWindow = new maps.InfoWindow();\r\n  };\r\n\r\nmodule.exports = handleApiLoaded;\r\n\r\n// lat: 51.509865,\r\n// lng: -0.118092,\r\n"]},"metadata":{},"sourceType":"module"}