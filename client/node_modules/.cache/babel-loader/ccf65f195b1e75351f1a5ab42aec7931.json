{"ast":null,"code":"/* eslint-disable no-plusplus */\nimport React, { useState } from 'react';\nlet infoWindow;\n\nconst showArrays = polygon => {\n  // Since this polygon has only one path, we can call getPath() to return the\n  // MVCArray of LatLngs.\n  // console.log(polygon.getPath());\n  // const contentString = `${'<b>Bermuda Triangle polygon</b><br>'}<br>`;\n  const vertices = polygon.getPath(); // // Iterate over the vertices.\n\n  for (let i = 0; i < vertices.getLength(); i++) {\n    const xy = vertices.getAt(i);\n    console.log(`${xy.lat()} , ${xy.lng()}`);\n  } // // Replace the info window's content and position.\n  // infoWindow.setContent(contentString);\n  // infoWindow.setPosition(event.latLng);\n  // infoWindow.open(map);\n\n};\n\nconst handleApiLoaded = (map, maps, polygonCoordinates) => {\n  const polygon = new maps.Polygon({\n    paths: polygonCoordinates,\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    editable: true,\n    draggable: true,\n    geodesic: true\n  });\n  polygon.setMap(map); // Add a listener for the click event.\n\n  polygon.addListener('click', event => showArrays(polygon)); // polygon.addListener('click', (event) => console.log(event.latLng.lat()));\n\n  infoWindow = new maps.InfoWindow();\n};\n\nexport default handleApiLoaded; // lat: 51.509865,\n// lng: -0.118092,","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/polygon.js"],"names":["React","useState","infoWindow","showArrays","polygon","vertices","getPath","i","getLength","xy","getAt","console","log","lat","lng","handleApiLoaded","map","maps","polygonCoordinates","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","editable","draggable","geodesic","setMap","addListener","event","InfoWindow"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAIC,UAAJ;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9B;AACA;AACA;AACA;AACA,QAAMC,QAAQ,GAAGD,OAAO,CAACE,OAAR,EAAjB,CAL8B,CAO9B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,SAAT,EAApB,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAME,EAAE,GAAGJ,QAAQ,CAACK,KAAT,CAAeH,CAAf,CAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEH,EAAE,CAACI,GAAH,EAAS,MAAKJ,EAAE,CAACK,GAAH,EAAS,EAAtC;AACD,GAX6B,CAa9B;AACA;AACA;AACA;;AACD,CAjBD;;AAmBA,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,kBAAZ,KAAmC;AACtD,QAAMd,OAAO,GAAG,IAAIa,IAAI,CAACE,OAAT,CAAiB;AAChCC,IAAAA,KAAK,EAAEF,kBADyB;AAEhCG,IAAAA,WAAW,EAAE,SAFmB;AAGhCC,IAAAA,aAAa,EAAE,GAHiB;AAIhCC,IAAAA,YAAY,EAAE,CAJkB;AAKhCC,IAAAA,SAAS,EAAE,SALqB;AAMhCC,IAAAA,WAAW,EAAE,IANmB;AAOhCC,IAAAA,QAAQ,EAAE,IAPsB;AAQhCC,IAAAA,SAAS,EAAE,IARqB;AAShCC,IAAAA,QAAQ,EAAE;AATsB,GAAjB,CAAhB;AAWDxB,EAAAA,OAAO,CAACyB,MAAR,CAAeb,GAAf,EAZuD,CAavD;;AACAZ,EAAAA,OAAO,CAAC0B,WAAR,CAAoB,OAApB,EAA8BC,KAAD,IAAW5B,UAAU,CAACC,OAAD,CAAlD,EAduD,CAevD;;AACAF,EAAAA,UAAU,GAAG,IAAIe,IAAI,CAACe,UAAT,EAAb;AACH,CAjBD;;AAmBA,eAAejB,eAAf,C,CAEA;AACA","sourcesContent":["/* eslint-disable no-plusplus */\r\nimport React, { useState } from 'react';\r\n\r\nlet infoWindow;\r\n\r\nconst showArrays = (polygon) => {\r\n  // Since this polygon has only one path, we can call getPath() to return the\r\n  // MVCArray of LatLngs.\r\n  // console.log(polygon.getPath());\r\n  // const contentString = `${'<b>Bermuda Triangle polygon</b><br>'}<br>`;\r\n  const vertices = polygon.getPath();\r\n\r\n  // // Iterate over the vertices.\r\n  for (let i = 0; i < vertices.getLength(); i++) {\r\n    const xy = vertices.getAt(i);\r\n    console.log(`${xy.lat()} , ${xy.lng()}`);\r\n  }\r\n\r\n  // // Replace the info window's content and position.\r\n  // infoWindow.setContent(contentString);\r\n  // infoWindow.setPosition(event.latLng);\r\n  // infoWindow.open(map);\r\n};\r\n\r\nconst handleApiLoaded = (map, maps, polygonCoordinates) => {\r\n     const polygon = new maps.Polygon({\r\n      paths: polygonCoordinates,\r\n      strokeColor: '#FF0000',\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 2,\r\n      fillColor: '#FF0000',\r\n      fillOpacity: 0.35,\r\n      editable: true,\r\n      draggable: true,\r\n      geodesic: true,\r\n    });\r\n    polygon.setMap(map);\r\n    // Add a listener for the click event.\r\n    polygon.addListener('click', (event) => showArrays(polygon));\r\n    // polygon.addListener('click', (event) => console.log(event.latLng.lat()));\r\n    infoWindow = new maps.InfoWindow();\r\n};\r\n\r\nexport default handleApiLoaded;\r\n\r\n// lat: 51.509865,\r\n// lng: -0.118092,\r\n"]},"metadata":{},"sourceType":"module"}