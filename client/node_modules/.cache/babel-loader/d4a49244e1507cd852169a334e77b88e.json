{"ast":null,"code":"/* eslint-disable no-plusplus */\nlet infoWindow;\n\nfunction showArrays(event, map, maps) {\n  // Since this polygon has only one path, we can call getPath() to return the\n  // MVCArray of LatLngs.\n  const polygon = this;\n  console.log(polygon); // console.log(maps.Polygon.getPath());\n  // const vertices = polygon.getPath();\n  // const contentString = `${'<b>Bermuda Triangle polygon</b><br>'}<br>`;\n  // // Iterate over the vertices.\n  // for (let i = 0; i < vertices.getLength(); i++) {\n  //   const xy = vertices.getAt(i);\n  //   console.log(`Coordinate ${i}:${xy.lat()},${xy.lng()}`);\n  // }\n  // // Replace the info window's content and position.\n  // infoWindow.setContent(contentString);\n  // infoWindow.setPosition(event.latLng);\n  // infoWindow.open(map);\n}\n\nfunction handleApiLoaded(map, maps, polygonCoordinates) {\n  const polygon = new maps.Polygon({\n    paths: polygonCoordinates,\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    editable: true,\n    draggable: true,\n    geodesic: true\n  });\n  polygon.setMap(map); // Add a listener for the click event.\n\n  polygon.addListener('click', event => showArrays(event, map, maps));\n  infoWindow = new maps.InfoWindow();\n}\n\nmodule.exports = handleApiLoaded; // lat: 51.509865,\n// lng: -0.118092,","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/polygon.js"],"names":["infoWindow","showArrays","event","map","maps","polygon","console","log","handleApiLoaded","polygonCoordinates","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","editable","draggable","geodesic","setMap","addListener","InfoWindow","module","exports"],"mappings":"AAAA;AACA,IAAIA,UAAJ;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AACpC;AACA;AACA,QAAMC,OAAO,GAAG,IAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAJoC,CAKpC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD;;AAED,SAASG,eAAT,CAAyBL,GAAzB,EAA8BC,IAA9B,EAAoCK,kBAApC,EAAwD;AACnD,QAAMJ,OAAO,GAAG,IAAID,IAAI,CAACM,OAAT,CAAiB;AAChCC,IAAAA,KAAK,EAAEF,kBADyB;AAEhCG,IAAAA,WAAW,EAAE,SAFmB;AAGhCC,IAAAA,aAAa,EAAE,GAHiB;AAIhCC,IAAAA,YAAY,EAAE,CAJkB;AAKhCC,IAAAA,SAAS,EAAE,SALqB;AAMhCC,IAAAA,WAAW,EAAE,IANmB;AAOhCC,IAAAA,QAAQ,EAAE,IAPsB;AAQhCC,IAAAA,SAAS,EAAE,IARqB;AAShCC,IAAAA,QAAQ,EAAE;AATsB,GAAjB,CAAhB;AAWDd,EAAAA,OAAO,CAACe,MAAR,CAAejB,GAAf,EAZoD,CAapD;;AACAE,EAAAA,OAAO,CAACgB,WAAR,CAAoB,OAApB,EAA8BnB,KAAD,IAAWD,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAaC,IAAb,CAAlD;AACAJ,EAAAA,UAAU,GAAG,IAAII,IAAI,CAACkB,UAAT,EAAb;AACD;;AAEHC,MAAM,CAACC,OAAP,GAAiBhB,eAAjB,C,CAEA;AACA","sourcesContent":["/* eslint-disable no-plusplus */\r\nlet infoWindow;\r\n\r\nfunction showArrays(event, map, maps) {\r\n  // Since this polygon has only one path, we can call getPath() to return the\r\n  // MVCArray of LatLngs.\r\n  const polygon = this;\r\n  console.log(polygon);\r\n  // console.log(maps.Polygon.getPath());\r\n  // const vertices = polygon.getPath();\r\n  // const contentString = `${'<b>Bermuda Triangle polygon</b><br>'}<br>`;\r\n\r\n  // // Iterate over the vertices.\r\n  // for (let i = 0; i < vertices.getLength(); i++) {\r\n  //   const xy = vertices.getAt(i);\r\n  //   console.log(`Coordinate ${i}:${xy.lat()},${xy.lng()}`);\r\n  // }\r\n\r\n  // // Replace the info window's content and position.\r\n  // infoWindow.setContent(contentString);\r\n  // infoWindow.setPosition(event.latLng);\r\n  // infoWindow.open(map);\r\n}\r\n\r\nfunction handleApiLoaded(map, maps, polygonCoordinates) {\r\n     const polygon = new maps.Polygon({\r\n      paths: polygonCoordinates,\r\n      strokeColor: '#FF0000',\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 2,\r\n      fillColor: '#FF0000',\r\n      fillOpacity: 0.35,\r\n      editable: true,\r\n      draggable: true,\r\n      geodesic: true,\r\n    });\r\n    polygon.setMap(map);\r\n    // Add a listener for the click event.\r\n    polygon.addListener('click', (event) => showArrays(event, map, maps));\r\n    infoWindow = new maps.InfoWindow();\r\n  }\r\n\r\nmodule.exports = handleApiLoaded;\r\n\r\n// lat: 51.509865,\r\n// lng: -0.118092,\r\n"]},"metadata":{},"sourceType":"module"}