{"ast":null,"code":"/* eslint-disable no-plusplus */\nimport React, { useState } from 'react';\n\nconst pointInPolygon = require('point-in-polygon'); // const polygon = [[1, 1], [1, 2], [2, 2], [2, 1]];\n// console.log(pointInPolygon([1.5, 1.5], polygon)); // true\n\n\nconst showArrays = polygon => {\n  const vertices = polygon.getPath();\n  const polygonData = [];\n\n  for (let i = 0; i < vertices.getLength(); i++) {\n    const xy = vertices.getAt(i);\n    polygonData.push([xy.lat(), xy.lng()]);\n  } // dispatch polygon coordinants\n\n\n  console.log(polygonData);\n};\n\nconst handleApiLoaded = (map, maps, polygonCoordinates) => {\n  const polygon = new maps.Polygon({\n    paths: polygonCoordinates,\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    editable: true,\n    draggable: true,\n    geodesic: true\n  });\n  polygon.setMap(map);\n  polygon.addListener('mouseup', () => showArrays(polygon));\n};\n\nexport default handleApiLoaded; // lat: 51.509865,\n// lng: -0.118092,","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/polygon.js"],"names":["React","useState","pointInPolygon","require","showArrays","polygon","vertices","getPath","polygonData","i","getLength","xy","getAt","push","lat","lng","console","log","handleApiLoaded","map","maps","polygonCoordinates","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","editable","draggable","geodesic","setMap","addListener"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B,C,CAEA;AAEA;;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;AAC9B,QAAMC,QAAQ,GAAGD,OAAO,CAACE,OAAR,EAAjB;AACA,QAAMC,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,SAAT,EAApB,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAME,EAAE,GAAGL,QAAQ,CAACM,KAAT,CAAeH,CAAf,CAAX;AACAD,IAAAA,WAAW,CAACK,IAAZ,CAAiB,CAACF,EAAE,CAACG,GAAH,EAAD,EAAWH,EAAE,CAACI,GAAH,EAAX,CAAjB;AACD,GAN6B,CAO9B;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACD,CATD;;AAWA,MAAMU,eAAe,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,kBAAZ,KAAmC;AACtD,QAAMhB,OAAO,GAAG,IAAIe,IAAI,CAACE,OAAT,CAAiB;AAChCC,IAAAA,KAAK,EAAEF,kBADyB;AAEhCG,IAAAA,WAAW,EAAE,SAFmB;AAGhCC,IAAAA,aAAa,EAAE,GAHiB;AAIhCC,IAAAA,YAAY,EAAE,CAJkB;AAKhCC,IAAAA,SAAS,EAAE,SALqB;AAMhCC,IAAAA,WAAW,EAAE,IANmB;AAOhCC,IAAAA,QAAQ,EAAE,IAPsB;AAQhCC,IAAAA,SAAS,EAAE,IARqB;AAShCC,IAAAA,QAAQ,EAAE;AATsB,GAAjB,CAAhB;AAWD1B,EAAAA,OAAO,CAAC2B,MAAR,CAAeb,GAAf;AACAd,EAAAA,OAAO,CAAC4B,WAAR,CAAoB,SAApB,EAA+B,MAAM7B,UAAU,CAACC,OAAD,CAA/C;AACH,CAdD;;AAgBA,eAAea,eAAf,C,CAEA;AACA","sourcesContent":["/* eslint-disable no-plusplus */\r\nimport React, { useState } from 'react';\r\n\r\nconst pointInPolygon = require('point-in-polygon');\r\n\r\n// const polygon = [[1, 1], [1, 2], [2, 2], [2, 1]];\r\n\r\n// console.log(pointInPolygon([1.5, 1.5], polygon)); // true\r\n\r\nconst showArrays = (polygon) => {\r\n  const vertices = polygon.getPath();\r\n  const polygonData = [];\r\n  for (let i = 0; i < vertices.getLength(); i++) {\r\n    const xy = vertices.getAt(i);\r\n    polygonData.push([xy.lat(), xy.lng()]);\r\n  }\r\n  // dispatch polygon coordinants\r\n  console.log(polygonData);\r\n};\r\n\r\nconst handleApiLoaded = (map, maps, polygonCoordinates) => {\r\n     const polygon = new maps.Polygon({\r\n      paths: polygonCoordinates,\r\n      strokeColor: '#FF0000',\r\n      strokeOpacity: 0.8,\r\n      strokeWeight: 2,\r\n      fillColor: '#FF0000',\r\n      fillOpacity: 0.35,\r\n      editable: true,\r\n      draggable: true,\r\n      geodesic: true,\r\n    });\r\n    polygon.setMap(map);\r\n    polygon.addListener('mouseup', () => showArrays(polygon));\r\n};\r\n\r\nexport default handleApiLoaded;\r\n\r\n// lat: 51.509865,\r\n// lng: -0.118092,\r\n"]},"metadata":{},"sourceType":"module"}