{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Desktop\\\\Programming\\\\Projects\\\\Live-Vehicle-Map\\\\client\\\\src\\\\features\\\\Map\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable padded-blocks */\n\n/* eslint-disable react/self-closing-comp */\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/react-in-jsx-scope */\nimport GoogleMapReact from 'google-map-react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LocationMarker from './LocationMarker';\nimport { fetchVehiclesLocations } from '../../state/actions/vehicleActions';\nimport Loader from '../Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    center,\n    zoom\n  } = _ref;\n  const {\n    loading,\n    vehiclesLocations\n  } = useSelector(state => state.vehicles);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(fetchVehiclesLocations()), []);\n  const vehicleMarkers = vehiclesLocations.map((vehicle, index) => {\n    if (index < 10) {\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        lat: vehicle.lat,\n        lng: vehicle.lng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 18\n      }, this);\n    }\n\n    return null;\n  });\n\n  const handleApiLoaded = (map, maps) => {\n    const triangleCoords = [{\n      lat: 25.774,\n      lng: -80.19\n    }, {\n      lat: 18.466,\n      lng: -66.118\n    }, {\n      lat: 32.321,\n      lng: -64.757\n    } // { lat: 25.774, lng: -80.19 },\n    ];\n    const bermudaTriangle = new maps.Polygon({\n      paths: triangleCoords,\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35\n    });\n    bermudaTriangle.setMap(map);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_API_KEY\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref2 => {\n        let {\n          map,\n          maps\n        } = _ref2;\n        return handleApiLoaded(map, maps);\n      },\n      children: vehicleMarkers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Map, \"Jir8JJ8gDVLUz3AaaAQZVghfhFg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 51.509865,\n    lng: -0.118092\n  },\n  zoom: 11\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/Live-Vehicle-Map/client/src/features/Map/Map.jsx"],"names":["GoogleMapReact","useEffect","useState","useDispatch","useSelector","LocationMarker","fetchVehiclesLocations","Loader","Map","center","zoom","loading","vehiclesLocations","state","vehicles","dispatch","vehicleMarkers","map","vehicle","index","lat","lng","handleApiLoaded","maps","triangleCoords","bermudaTriangle","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","setMap","key","process","env","REACT_APP_API_KEY","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable padded-blocks */\r\n/* eslint-disable react/self-closing-comp */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LocationMarker from './LocationMarker';\r\nimport { fetchVehiclesLocations } from '../../state/actions/vehicleActions';\r\nimport Loader from '../Loader';\r\n\r\nconst Map = ({ center, zoom }) => {\r\n    const { loading, vehiclesLocations } = useSelector((state) => state.vehicles);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => dispatch(fetchVehiclesLocations()), []);\r\n\r\n    const vehicleMarkers = vehiclesLocations.map((vehicle, index) => {\r\n        if (index < 10) {\r\n          return <LocationMarker lat={vehicle.lat} lng={vehicle.lng} />;\r\n        } \r\n        return null;\r\n      });\r\n\r\n    const handleApiLoaded = (map, maps) => {\r\n      const triangleCoords = [\r\n        { lat: 25.774, lng: -80.19 },\r\n        { lat: 18.466, lng: -66.118 },\r\n        { lat: 32.321, lng: -64.757 },\r\n        // { lat: 25.774, lng: -80.19 },\r\n      ];\r\n    \r\n       const bermudaTriangle = new maps.Polygon({\r\n        paths: triangleCoords,\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n      });\r\n      bermudaTriangle.setMap(map);\r\n    };\r\n\r\n    return (\r\n      <div className=\"map\">\r\n        {loading \r\n          ? <Loader />\r\n          : (\r\n            <GoogleMapReact \r\n              bootstrapURLKeys={{ key: process.env.REACT_APP_API_KEY }}\r\n              defaultCenter={center}\r\n              defaultZoom={zoom}\r\n              yesIWantToUseGoogleMapApiInternals \r\n              onGoogleApiLoaded={({ map, maps }) => handleApiLoaded(map, maps)}\r\n            >\r\n              {vehicleMarkers}\r\n            </GoogleMapReact>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 51.509865,\r\n        lng: -0.118092,\r\n    },\r\n    zoom: 11,\r\n};\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}